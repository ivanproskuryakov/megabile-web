<?php

namespace Magazento\UserBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Magazento\CatalogBundle\Repository\CategoryRepository;
/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends DocumentRepository
{
    

    public function removeByUserId($userId) {
        return $this->createQueryBuilder()
                        ->remove()
                        ->field('id')->equals($userId)
                        ->getQuery()
                        ->execute();
    }
    
    public function getAllUsersAdmin() {

                
        $users = $this->createQueryBuilder()
                ->getQuery()
                ->execute();
        
        $data= array();
        $i=0;
        foreach ($users as $_user) {
            
            $countBuild = $this->dm->getRepository('Magazento\BuildBundle\Document\BuildHistory')
                    ->createQueryBuilder()
                    ->field('user_id')->equals($_user->getId())
                    ->getQuery()
                    ->execute()
                    ->count();  
            
            $countCategories = $this->dm->getRepository('Magazento\CatalogBundle\Document\Category')
                    ->createQueryBuilder()
                    ->field('user_id')->equals($_user->getId())
                    ->getQuery()
                    ->execute()
                    ->count();  
            $countProducts = $this->dm->getRepository('Magazento\CatalogBundle\Document\Product')
                    ->createQueryBuilder()
                    ->field('user_id')->equals($_user->getId())
                    ->getQuery()
                    ->execute()
                    ->count();  
        
            $data[$i]['id'] = $_user->getId();
            $data[$i]['username'] = $_user->getUsername();
            $data[$i]['email'] = $_user->getEmail();
            $data[$i]['money'] = $_user->getMoney();
            $data[$i]['money_reserved'] = $_user->getMoneyReserved();
            $data[$i]['count_build'] = $countBuild;
            $data[$i]['count_category'] = $countCategories;
            $data[$i]['count_products'] = $countProducts;
            $data[$i]['pay_date'] = date("F j, Y, g:i a",$_user->getPayDate()->__toString());
            $i++;
        }
        
        
        return $data;
    }    
    
    public function getAllUsersConsole() {
                
        $users = $this->createQueryBuilder()
                ->getQuery()
                ->execute();
        
        return $users;
    }    
}