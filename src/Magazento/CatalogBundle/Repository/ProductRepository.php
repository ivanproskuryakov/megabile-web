<?php

namespace Magazento\CatalogBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends DocumentRepository {

    public function removeByUserId($userId) {
        return $this->createQueryBuilder()
                        ->remove()
                        ->field('user_id')->equals($userId)
                        ->getQuery()
                        ->execute();
    }
    
    public function massRemove($ids) {
        foreach ($ids as $id) {
            $this->createQueryBuilder()
                            ->remove()
                            ->field('id')->equals($id)
                            ->getQuery()
                            ->execute();            
        }

    }    
    
    public function getProductsByUserId($userId) {

        $products = $this->createQueryBuilder()
                ->field('user_id')->equals($userId)
                ->getQuery()
                ->execute()->toArray();
        
        $data= array();
        $i=0;
        foreach ($products as $_product) {
            $data[$i]['picture'] = $_product->getPicture();
            $data[$i]['id'] = $_product->getId();
            $data[$i]['name'] = $_product->getName();
            $data[$i]['sku'] = $_product->getSku();
            $data[$i]['price'] = $_product->getPrice();
            $data[$i]['url'] = $_product->getUrl();
            $data[$i]['description'] = trim($_product->getDescription());

            $data[$i]['xml_product_id'] = $_product->getXmlProductId();
            $data[$i]['xml_category_id'] = trim($_product->getXmlCategoryId());

            $i++;
        }
        
        return $data;
    }

}